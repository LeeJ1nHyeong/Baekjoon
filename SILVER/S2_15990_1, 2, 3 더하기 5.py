t = int(input())
# n값이 0 ~ 3일 때의 값을 미리 저장한 상태에서 100000 까지의 2차원 dp 생성
dp = [[0, 0, 0], [1, 0, 0], [0, 1, 0], [1, 1, 1]] + [[0, 0, 0] for _ in range(4, 100001)]

# 4부터 dp 진행
for i in range(4, 100001):
    # 0번 인덱스 == n - 1의 1번 인덱스 + n - 1의 2번 인덱스
    dp[i][0] = dp[i - 1][1] % 1000000009 + dp[i - 1][2] % 1000000009
    # 1번 인덱스 == n - 2의 0번 인덱스 + n - 2의 2번 인덱스
    dp[i][1] = dp[i - 2][0] % 1000000009 + dp[i - 2][2] % 1000000009
    # 2번 인덱스 == n - 3의 0번 인덱스 + n - 3의 1번 인덱스
    dp[i][2] = dp[i - 3][0] % 1000000009 + dp[i - 3][1] % 1000000009

# 각 테스트 케이스에 해당하는 dp의 합을 1,000,000,009로 나눈 나머지 값을 출력
for _ in range(t):
    n = int(input())
    print(sum(dp[n]) % 1000000009)
